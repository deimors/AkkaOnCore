@page
<div id="meetings">
	<ul>
		<li v-for="(meeting, id) in model.meetings">
			<a :href="'/meeting/index/' + id"><h3>{{ meeting.name }} ({{ meeting.agendaItemCount }})</h3></a>
		</li>
	</ul>
	<div v-if="disconnected" style="color: black; background-color: red; font-weight: bold; padding: 5px">Disconnected</div>
	<div>
		<input type="text" v-model="newMeetingName" placeholder="Meeting Name" v-on:keyup.enter="startMeeting" />

		<button v-on:click="startMeeting">Start</button>
	</div>
</div>

<script src="~/lib/vue/vue.js"></script>
<script src="~/lib/signalr/dist/browser/signalr.js"></script>

<script>
	var app = new Vue({
		el: '#meetings',
		data: {
			newMeetingName: "",
			disconnected: true,
			model: {
				meetings: {}
			}
		},
		methods: {
			loadMeetings() {
				fetch('/api/meetings')
					.then(response => response.json())
					.then(model => this.model = model);
			},
			startMeeting() {
				fetch(
					'/api/meetings',
					{
						method: 'POST',
						headers: { 'Accept': '*/*', 'Content-Type': 'application/json' },
						body: JSON.stringify({ name: this.newMeetingName })
					}
				).then(_ => this.newMeetingName = "");
			}
		},
		created() {
			this.loadMeetings();
		}
	});

	var connection = new signalR.HubConnectionBuilder().withUrl("/signalr/meetingsHub").build();

	connection.on("OnMeetingAddedToList", (id, name) => Vue.set(app.meetings, id, { name: name, id: id, agendaItemCount: 0 }));
	connection.on("OnMeetingAgendaCountChanged", (id, newCount) => app.meetings[id].agendaItemCount = newCount);

	function start() {
		connection
			.start()
			.then(() => {
				console.info("Connected");
				app.disconnected = false;
			})
			.catch(err => {
				console.error(err.toString());
				setTimeout(() => start(), 1000);
			});
	}

	connection.onclose(() => {
		console.info("Disconnected, retrying...");
		app.disconnected = true;
		start();
	});

	start();
</script>