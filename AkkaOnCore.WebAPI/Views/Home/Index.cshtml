@page
	<div id="meetings">
		<ul>
			<li v-for="meeting in meetings">
				<h3>{{ meeting.name }}</h3>
			</li>
		</ul>
		<div v-if="disconnected" style="color: black; background-color: red; font-weight: bold; padding: 5px">Disconnected</div>
		<div>
			<input type="text" v-model="newMeetingName" placeholder="Meeting Name" />

			<button v-on:click="startMeeting">Start</button>
		</div>
	</div>

<script src="~/lib/vue/vue.js"></script>
<script src="~/lib/signalr/dist/browser/signalr.js"></script>

<script>
	var app = new Vue({
		el: '#meetings',
		data: {
			newMeetingName: "",
			meetings: [],
			disconnected: true
		},
		methods: {
			loadMeetings() {
				fetch('/api/meetings')
					.then(response => response.json())
					.then(meetings => this.meetings = meetings);
			},
			startMeeting() {
				fetch(
					'/api/meetings',
					{
						method: 'POST',
						headers: { 'Accept': '*/*', 'Content-Type': 'application/json' },
						body: JSON.stringify({ name: this.newMeetingName })
					}
				);
			}
		},
		created() {
			this.loadMeetings();
		}
	});

	var connection = new signalR.HubConnectionBuilder().withUrl("/signalr/meetingsHub").build();

	connection.on("OnMeetingAddedToList", (id, name) => app.meetings.push({ name: name, id: id }));

	function start() {
		connection
			.start()
			.then(() => {
				console.info("Connected");
				app.disconnected = false;
			})
			.catch(err => {
				console.error(err.toString());
				setTimeout(() => start(), 1000);
			});
	}

	connection.onclose(() => {
		console.info("Disconnected, retrying...");
		app.disconnected = true;
		start();
	});

	start();
</script>