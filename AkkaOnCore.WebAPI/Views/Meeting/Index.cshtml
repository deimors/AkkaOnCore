@page
@{
	var meetingId = (Guid) ViewBag.MeetingId;
}
	<div id="meeting">
		<h1>{{model.name}}</h1>
		<ul>
			<li v-for="(agendaItem, id) in model.agenda">
				<h3>{{ agendaItem }}</h3>
			</li>
		</ul>
		<div v-if="disconnected" class="error-banner">Disconnected</div>
		<div>
			<input type="text" v-model="newAgendaItem" placeholder="Agenda Item" v-on:keyup.enter="addAgendaItem" v-on:focus="clearError" v-on:keydown="clearError" /><button v-on:click="addAgendaItem">Add</button>
		</div>
		<div v-if="hasError" class="error-banner">{{ errorMessage }}</div>
	</div>

<script src="~/lib/vue/vue.js"></script>
<script src="~/lib/signalr/dist/browser/signalr.js"></script>

<script>
	var app = new Vue({
		el: '#meeting',
		data: {
			newAgendaItem: "",
			disconnected: false,
			errorMessage: "",
			model: {
				name: "",
				agenda: {}
			}
		},
		methods: {
			loadModel() {
				fetch('/api/meeting/@meetingId')
					.then(response => response.json())
					.then(model => this.model = model);
			},
			addAgendaItem() {
				fetch(
					'/api/meeting/@meetingId/addtoagenda',
					{
						method: 'POST',
						headers: { 'Accept': '*/*', 'Content-Type': 'application/json' },
						body: JSON.stringify({ description: this.newAgendaItem })
					}
				).then(response =>
					{
						if (response.ok)
							this.newAgendaItem = "";
						else
							response.text().then(error => this.errorMessage = error);
					}
				).catch(error => this.errorMessage = error);
			},
			clearError() {
				this.errorMessage = null;
			}
		},
		computed: {
			hasError: function() { return !!this.errorMessage; }
		},
		created() {
			this.loadModel();
		}
	});

	var connection = new signalR.HubConnectionBuilder().withUrl("/signalr/meetingHub").build();

	connection.on("OnAgendaItemAdded", (id, description) => Vue.set(app.model.agenda, id, description));

	function start() {
		connection
			.start()
			.then(() => {
				console.info("Connected");
				app.disconnected = false;
				connection
					.invoke("Subscribe", "@meetingId")
					.then(() => console.info("Subscribed"))
					.catch(err => console.error(err.toString()));
			})
			.catch(err => {
				console.error(err.toString());
				setTimeout(() => start(), 1000);
			});
	}

	connection.onclose(() => {
		console.info("Disconnected, retrying...");
		app.disconnected = true;
		start();
	});

	start();
</script>